---
title: "Lesson 2: Create your own data frame"
output: html_document
---

## Step 1: Load packages
```{r}
install.packages("tidyverse")
```

```{r}
library(tidyverse)
```





## Step 2: Create data frame

create a vector of names by inserting four names into this code block between the quotation marks and then run it:

```{r}
names <- c("Andrew", "Brandy", "Cameron", "Diamond")
```

Then create a vector of ages by adding four ages separated by commas to the code chunk below. Make sure you are inputting numeric values for the ages or you might get an error. 

```{r}
age <- c(12,37 ,45 ,59 )
```

```{r}
people <- data.frame(names, age)
```




## Step 3: inspect the data frame

Now that you have this data frame, you can use some different functions to inspect it.

One common function you can use to preview the data is the `head()` function, which returns the columns and the first several rows of data. You can check out how the `head()` function works by running the chunk below:

```{r}
head(people)
```
## Results in R console

names
<chr>

age
<dbl>
1		12		
2		37		
3		45		
4		59		

4 rows

In addition to `head()`, there are a number of other useful functions to summarize or preview your data. For example, the `str()` and `glimpse()` functions will both provide summaries of each column in your data arranged horizontally. You can check out these two functions in action by running the code chunks below:

```{r}
str(people)
```
'data.frame':	4 obs. of  2 variables:
 $ names: chr  "" "" "" ""
 $ age  : num  12 37 45 59
 
 
 ```{r}
glimpse(people)
```


You can also use `colnames()` to get a list the column names in your data set. Run the code chunk below to check out this function:

```{r}
colnames(people)
```
[1] "names" "age"  


Now that you have a data frame, you can work with it using all of the tools in `R`. For example, you could use `mutate()` if you wanted to create a new variable that would capture each person's age in twenty years. The code chunk below creates that new variable:

```{r}
mutate(people, age_in_20 = age + 20)
```



##CREATED NEW DATA FRAME

```{r}
fruits <- c("Apple", "Banana","Coconut","Dragon Fruit", "Elderberry")
```

```{r}
rank <- c("3", "2", "1", "4", "5")
```

```{r}
fruit_ranks_1 <- data.frame(fruits, rank)
```

fruit_ranks_1 %>% arrange (rank) ## asc --< ranks in ascending order by default

fruit_ranks_1 %>% arrange (desc(rank)) ## desc
